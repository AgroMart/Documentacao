{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AgroMart","text":"<p> O AgroMart nasceu para transformar a forma como nos relacionamos com a agricultura familiar. Criado durante um Hackathon na UnB \u2013 FGA em 2020, no auge da pandemia, o projeto surgiu de um desafio simples e poderoso: aproximar agricultores e consumidores em um momento em que a conex\u00e3o era mais necess\u00e1ria do que nunca.</p> <p> Mais do que uma solu\u00e7\u00e3o tecnol\u00f3gica, o AgroMart \u00e9 um movimento. Uma plataforma que coloca o pequeno agricultor no centro, dando visibilidade \u00e0 sua produ\u00e7\u00e3o e garantindo que cada colheita encontre destino certo. Ao mesmo tempo, abre caminho para que consumidores descubram alimentos frescos, saud\u00e1veis e de qualidade, vindos direto de quem planta.</p> <p> Inspirado no modelo de CSA (Community Supported Agriculture), o AgroMart fortalece comunidades, cria la\u00e7os de confian\u00e7a e promove uma economia mais justa e sustent\u00e1vel. \u00c9 sobre reduzir dist\u00e2ncias, valorizar o que \u00e9 local e construir uma rede onde todos ganham: o agricultor que escoa sua produ\u00e7\u00e3o, o consumidor que encontra comida de verdade, e a sociedade que se beneficia de uma agricultura mais pr\u00f3xima e humana. </p>"},{"location":"#conheca-o-que-e-uma-csa","title":"Conhe\u00e7a o que \u00e9 uma CSA","text":"<p>As Comunidades que Sustentam a Agricultura (CSA) aproximam consumidores e agricultores por meio de uma parceria de confian\u00e7a, transpar\u00eancia e apoio m\u00fatuo.</p> <ul> <li> <p> Comunidade CSA     Parceria transforma consumidores em coagricultores.  Acessar not\u00edcia</p> </li> <li> <p> Transpar\u00eancia e Origem     Produtos de origem conhecida e rela\u00e7\u00e3o direta com quem produz.  Ler mais</p> </li> <li> <p> Economia Local     CSA \u00e9 um caminho que proporciona mais sustentabilidade.  Saiba mais</p> </li> </ul>"},{"location":"#explore-o-agromart","title":"Explore o AgroMart","text":"<ul> <li> <p> Aplicativo AgroMart (Mobile)     Aplicativo Android/iOS integrado \u00e0 API AgroMart.  Ver Reposit\u00f3rio</p> </li> <li> <p> Plataforma AgroMart (Web)     Interface Web do AgroMart para consumidores e produtores.  Ver Reposit\u00f3rio</p> </li> </ul>"},{"location":"Contribuicao/","title":"Guia de Contribui\u00e7\u00e3o para o AgroMart","text":"<p>Agradecemos por dedicar seu tempo e interesse em contribuir para o nosso projeto! Sua colabora\u00e7\u00e3o \u00e9 essencial para que possamos evoluir continuamente e entregar solu\u00e7\u00f5es cada vez melhores.  </p> <p>Antes de come\u00e7ar, pedimos que leia atentamente este documento \u2014 ele orienta sobre as pr\u00e1ticas recomendadas e o fluxo de contribui\u00e7\u00e3o, garantindo que sua participa\u00e7\u00e3o seja clara, produtiva e integrada ao trabalho da comunidade.</p>"},{"location":"Contribuicao/#como-contribuir","title":"Como Contribuir","text":"<ol> <li>Crie um fork do projeto.  </li> <li>Clone o fork criado em sua m\u00e1quina local: <pre><code>git clone https://github.com/seu-usuario/agromart.git\n</code></pre></li> <li> <p>Crie uma branch para sua contribui\u00e7\u00e3o: <pre><code>git checkout -b minha-contribuicao\n</code></pre></p> </li> <li> <p>Realize as altera\u00e7\u00f5es necess\u00e1rias na sua branch.</p> </li> <li> <p>Teste suas altera\u00e7\u00f5es localmente.</p> </li> <li> <p>Fa\u00e7a um commit com uma mensagem clara e descritiva:</p> </li> </ol> <pre><code>git commit -m \"Adiciona funcionalidade X\"\n</code></pre> <ol> <li>Envie as altera\u00e7\u00f5es para o seu fork:</li> </ol> <pre><code>git push origin minha-contribuicao\n</code></pre> <ol> <li>Abra um Pull Request para a branch master do reposit\u00f3rio original e aguarde a revis\u00e3o.</li> </ol> <p>Pol\u00edtica de Pull Request</p> <p>Cada Pull Request deve conter apenas uma funcionalidade ou corre\u00e7\u00e3o de bug. A mensagem de commit deve ser descritiva e objetiva. Todo PR deve ter pelo menos um revisor antes de ser mesclado.</p>"},{"location":"Contribuicao/#regras-de-contribuicao","title":"Regras de Contribui\u00e7\u00e3o","text":"<ul> <li> <p>Para manter a qualidade e a consist\u00eancia do projeto, siga as diretrizes abaixo:</p> </li> <li> <p>Escreva c\u00f3digo claro e bem documentado;</p> </li> <li> <p>Siga as boas pr\u00e1ticas da linguagem e do framework;</p> </li> <li> <p>Teste o c\u00f3digo antes de enviar a contribui\u00e7\u00e3o;</p> </li> <li> <p>Cada Pull Request deve ser focado em uma altera\u00e7\u00e3o espec\u00edfica;</p> </li> <li> <p>Mensagens de commit devem ser curtas, diretas e em portugu\u00eas.</p> </li> </ul>"},{"location":"Contribuicao/#politica-de-commits","title":"Pol\u00edtica de Commits","text":"<ul> <li> <p>Commits devem ser redigidos em portugu\u00eas e no ger\u00fandio;</p> </li> <li> <p>Devem ser simples, concisos e descritivos;</p> </li> <li> <p>Sempre associe ao n\u00famero da issue quando aplic\u00e1vel.</p> </li> </ul> <p>Padr\u00e3o:</p> <pre><code>(#NUMERO_DA_ISSUE) Mensagem\n</code></pre> <p>Exemplo:</p> <pre><code>(#26) Criando componente menu\n</code></pre>"},{"location":"Contribuicao/#politica-de-branches","title":"Pol\u00edtica de Branches","text":""},{"location":"Contribuicao/#padroes-de-nomenclatura","title":"Padr\u00f5es de nomenclatura:","text":"<ul> <li> <p>Novas funcionalidades \u2192 feature/nome-da-feature</p> </li> <li> <p>Corre\u00e7\u00f5es de bugs \u2192 fix/nome-do-bug</p> </li> <li> <p>Documenta\u00e7\u00e3o \u2192 docs/nome-da-doc</p> </li> <li> <p>Outros \u2192 siga a conven\u00e7\u00e3o apropriada ao tipo de altera\u00e7\u00e3o</p> </li> </ul>"},{"location":"Contribuicao/#bugs-e-problemas","title":"Bugs e Problemas","text":""},{"location":"Contribuicao/#se-voce-encontrar-um-bug-ou-tiver-algum-problema-com-o-projeto","title":"Se voc\u00ea encontrar um bug ou tiver algum problema com o projeto:","text":"<ul> <li> <p>Abra uma issue detalhando o problema;</p> </li> <li> <p>Sempre que poss\u00edvel, adicione prints de tela ou logs para facilitar a reprodu\u00e7\u00e3o.</p> </li> <li> <p>N\u00f3s ficaremos felizes em ajudar a solucionar o problema!</p> </li> </ul>"},{"location":"Contribuicao/#licenca","title":"Licen\u00e7a","text":"<p>Ao contribuir com este projeto, voc\u00ea concorda que sua contribui\u00e7\u00e3o ser\u00e1 licenciada sob a mesma licen\u00e7a do projeto original.</p>"},{"location":"Contribuicao/#explore-o-agromart","title":"Explore o AgroMart","text":"<p>Conhe\u00e7a os reposit\u00f3rios oficiais do ecossistema AgroMart:  </p> Projeto \ud83d\udca1 Descri\u00e7\u00e3o \ud83d\udd17 Reposit\u00f3rio AgroMart Mobile Aplicativo voltado ao consumidor final, conectando compradores a agricultores familiares. GitHub - AgroMart Mobile AgroMart Web Plataforma administrativa para agricultores gerenciarem suas lojas e produtos. GitHub - AgroMart Web <p>Dica</p> <p>Voc\u00ea pode explorar cada reposit\u00f3rio para conhecer a arquitetura, as boas pr\u00e1ticas e os padr\u00f5es de desenvolvimento adotados no projeto.</p>"},{"location":"processo/","title":"Processo de Desenvolvimento \u2013 Agromart","text":""},{"location":"processo/#1-objetivo","title":"1. Objetivo","text":"<p>A cria\u00e7\u00e3o de um processo padr\u00e3o para o Agromart se deu pela necessidade de organizar padr\u00f5es, documentos e entregas. Baseado na literatura cient\u00edfica e no contexto de desenvolvimento de software livre, esse processo prev\u00ea a melhora na qualidade, rastreabilidade e sustentabilidade do projeto como um todo, respeitando a rotatividade e o car\u00e1ter volunt\u00e1rio dos colaboradores do Agromart.</p>"},{"location":"processo/#2-principios","title":"2. Princ\u00edpios","text":"<ul> <li>Clareza: diretrizes simples e transparentes para todos os colaboradores.</li> <li>Acessibilidade: documenta\u00e7\u00e3o objetiva e centralizada, reduzindo barreiras de entrada.</li> <li>Adapta\u00e7\u00e3o cont\u00ednua: o processo \u00e9 revis\u00e1vel e pode evoluir a qualquer momento, mantendo-se \u00e1gil e leve.</li> </ul>"},{"location":"processo/#3-modelo-hibrido","title":"3. Modelo H\u00edbrido","text":"<p>O processo combina pr\u00e1ticas de Kanban, Scrum e Extreme Programming (XP), aproveitando o melhor de cada abordagem:</p> <ul> <li>Base: Kanban \u2013 fluxo cont\u00ednuo, sem sprints fixas.  </li> <li>Scrum Adaptado: uso dos conceitos de DoR (Definition of Ready) e DoD (Definition of Done).  </li> <li>XP: foco na simplicidade do c\u00f3digo e integra\u00e7\u00e3o cont\u00ednua.</li> </ul>"},{"location":"processo/#4-kanban-board","title":"4. Kanban Board","text":"<p>O quadro Kanban (criado no GitHub Projects) organiza o fluxo de trabalho em colunas visuais, permitindo acompanhar as tarefas de forma transparente.</p>"},{"location":"processo/#colunas-do-kanban","title":"Colunas do Kanban","text":"Coluna Significado Crit\u00e9rio principal Backlog Ideias, melhorias ou tarefas que ainda n\u00e3o t\u00eam detalhes t\u00e9cnicos suficientes. Ainda n\u00e3o atingem o DoR. To Do Tarefas prontas para desenvolvimento, com descri\u00e7\u00e3o t\u00e9cnica e crit\u00e9rios de aceite definidos. Atendem ao DoR (Definition of Ready). In Progress Tarefas sendo desenvolvidas por um ou mais colaboradores. Possuem branch ativa. Em Revis\u00e3o Tarefas com PR aberto aguardando revis\u00e3o por pares e valida\u00e7\u00e3o autom\u00e1tica (CI). C\u00f3digo submetido e em an\u00e1lise. Conclu\u00eddo Tarefas finalizadas e aceitas ap\u00f3s revis\u00e3o e testes automatizados. Atendem ao DoD (Definition of Done)."},{"location":"processo/#5-conceitos-chave","title":"5. Conceitos-Chave","text":""},{"location":"processo/#definition-of-ready-dor","title":"Definition of Ready (DoR)","text":"<p>Uma tarefa est\u00e1 pronta para desenvolvimento quando: - Possui descri\u00e7\u00e3o clara e completa. - Est\u00e1 priorizada no Kanban (coluna \u201cA Fazer\u201d).  - \u00c9 compreendida pelos desenvolvedores que ir\u00e3o execut\u00e1-la.</p> <p>Tarefas que ainda n\u00e3o atendem a esses crit\u00e9rios permanecem no Backlog at\u00e9 serem detalhadas.</p>"},{"location":"processo/#definition-of-done-dod","title":"Definition of Done (DoD)","text":"<p>Uma tarefa \u00e9 considerada conclu\u00edda quando: - O c\u00f3digo foi revisado e aprovado por outro colaborador. - Passou nas actions de CI. - Foi integrada \u00e0 branch principal. - A documenta\u00e7\u00e3o e as decis\u00f5es t\u00e9cnicas foram atualizadas.</p> <p>Apenas quando todos esses pontos s\u00e3o atendidos, a tarefa move-se para a coluna \u201cConclu\u00eddo\u201d.</p>"},{"location":"processo/#6-pilares-do-processo","title":"6. Pilares do Processo","text":"<ul> <li>Rastreabilidade: issues e PRs sempre vinculados, com commits padronizados.  </li> <li>Leveza: documenta\u00e7\u00e3o m\u00ednima mantida neste reposit\u00f3rio de documenta\u00e7\u00e3o.</li> <li>Melhoria Cont\u00ednua: revis\u00e3o peri\u00f3dica do processo e registro de decis\u00f5es t\u00e9cnicas em arquivos leves.</li> </ul>"},{"location":"processo/#7-ciclo-de-desenvolvimento-continuo","title":"7. Ciclo de Desenvolvimento Cont\u00ednuo","text":"<ol> <li>Abrir issues seguindo os templates.  </li> <li>Mover para \u201cTo Do\u201d quando atender ao DoR.  </li> <li>Desenvolver via branches e PRs vinculados \u00e0s issues.  </li> <li>Revisar e validar PRs (CI e revis\u00f5es de c\u00f3digo).  </li> <li>Atualizar documenta\u00e7\u00e3o e registros, quando necess\u00e1rio.  </li> <li>Mover a tarefa para \"Done\" ap\u00f3s atender ao DoD.  </li> </ol>"},{"location":"processo/#8-ferramentas-de-suporte","title":"8. Ferramentas de Suporte","text":"<ul> <li>GitHub: hospedagem do c\u00f3digo e controle de vers\u00e3o.  </li> <li>GitHub Projects: Kanban integrado a issues e PRs.  </li> <li>GitHub Actions: automa\u00e7\u00e3o e valida\u00e7\u00f5es.  </li> </ul>"},{"location":"processo/#9-instanciacao-e-evolucao","title":"9. Instancia\u00e7\u00e3o e Evolu\u00e7\u00e3o","text":"<p>O processo dever\u00e1 ser aplicado pelos desenvolvedores e contribuidores do projeto. O processo est\u00e1 aberto a altera\u00e7\u00f5es e evolu\u00e7\u00f5es de acordo com os feedbacks dos manetedores coletados e utilizados para ajustar continuamente o processo, sempre com o objetivo de manter o crescimento sustent\u00e1vel do projeto a longo prazo.</p>"},{"location":"AgroMart_Mobile/AgroMartMobile/","title":"AgroMart Mobile","text":"<p>O AgroMart Mobile foi criado para aproximar consumidores e agricultores familiares, oferecendo um canal direto de acesso a produtos frescos, de qualidade e com origem conhecida. Enquanto o AgroMart Web funciona como painel administrativo para os produtores, o aplicativo mobile \u00e9 a vitrine acess\u00edvel ao p\u00fablico, permitindo que qualquer pessoa descubra, conhe\u00e7a e entre em contato com os agricultores de sua regi\u00e3o.</p> <p>Mais do que uma simples lista de produtos, o AgroMart Mobile busca criar uma experi\u00eancia de consumo transparente e consciente, onde o usu\u00e1rio pode explorar lojas, filtrar categorias, localizar pontos de venda pr\u00f3ximos e interagir diretamente com o produtor. Dessa forma, o aplicativo fortalece a rede de CSAs, valoriza o que \u00e9 local e promove a agricultura familiar como alternativa vi\u00e1vel e sustent\u00e1vel.</p> <p>Em s\u00edntese, o AgroMart Mobile existe para conectar quem planta com quem consome, reduzindo dist\u00e2ncias e criando um ambiente de confian\u00e7a m\u00fatua entre produtores e consumidores.</p>"},{"location":"AgroMart_Mobile/AgroMartMobile/#objetivo","title":"Objetivo","text":"<p>O objetivo do AgroMart Mobile \u00e9 disponibilizar aos consumidores uma plataforma pr\u00e1tica e acess\u00edvel para:</p> <ul> <li>Explorar produtos frescos e de qualidade, diretamente de agricultores locais;  </li> <li>Encontrar pontos de venda e lojas por meio de filtros e geolocaliza\u00e7\u00e3o;  </li> <li>Acessar informa\u00e7\u00f5es claras sobre pre\u00e7o, descri\u00e7\u00e3o e disponibilidade dos produtos;  </li> <li>Iniciar contato direto com o agricultor, facilitando negocia\u00e7\u00f5es e combina\u00e7\u00f5es de entrega ou retirada.  </li> </ul> <p>Importante</p> <p>O AgroMart Mobile foi desenvolvido com foco no consumidor final. Sua fun\u00e7\u00e3o \u00e9 tornar a agricultura familiar mais vis\u00edvel e acess\u00edvel, promovendo um consumo saud\u00e1vel e consciente.</p>"},{"location":"AgroMart_Mobile/AgroMartMobile/#funcionalidades-atuais","title":"Funcionalidades Atuais","text":"<p>O AgroMart Mobile j\u00e1 est\u00e1 em funcionamento e oferece aos usu\u00e1rios uma experi\u00eancia completa para intera\u00e7\u00e3o com agricultores locais. Entre os principais recursos dispon\u00edveis est\u00e3o:</p> <ul> <li>Cria\u00e7\u00e3o de conta e autentica\u00e7\u00e3o do usu\u00e1rio;  </li> <li>Listagem das lojas na p\u00e1gina principal;  </li> <li>Pesquisa de lojas por nome;  </li> <li>Pesquisa por regi\u00e3o administrativa;  </li> <li>Visualiza\u00e7\u00e3o da loja com cat\u00e1logo, descri\u00e7\u00e3o, produtos e pre\u00e7os;  </li> <li>A\u00e7\u00e3o de contato com o dono da loja (link para mensageria/contato);  </li> <li>Realiza\u00e7\u00e3o de pedidos;  </li> <li>Hist\u00f3rico de pedidos;  </li> <li>Planos (assinaturas): visualizar planos ativos e pular a cesta da semana;  </li> <li>Endere\u00e7os: cadastrar e editar;  </li> <li>Perfil: editar dados do usu\u00e1rio.  </li> </ul>"},{"location":"AgroMart_Mobile/AgroMartMobile/#proximos-desenvolvimentos","title":"Pr\u00f3ximos Desenvolvimentos","text":"<p>Mesmo j\u00e1 funcional, o AgroMart Mobile continuar\u00e1 a ser evolu\u00eddo para oferecer novas formas de engajamento. Entre os pontos planejados est\u00e3o:</p> <ul> <li>Aprimoramento da usabilidade \u2013 ajustes na interface para tornar a experi\u00eancia de navega\u00e7\u00e3o ainda mais simples e agrad\u00e1vel;  </li> <li>Notifica\u00e7\u00f5es personalizadas \u2013 alertas sobre novos produtos, promo\u00e7\u00f5es ou disponibilidade de itens favoritos;  </li> <li>Integra\u00e7\u00e3o com formas de pagamento digital \u2013 facilitando a conclus\u00e3o de negocia\u00e7\u00f5es diretamente pelo aplicativo.  </li> </ul>"},{"location":"AgroMart_Mobile/AgroMartMobile/#stack-tecnologica","title":"Stack Tecnol\u00f3gica","text":"<p>O aplicativo Mobile foi desenvolvido com foco em multiplataforma, garantindo acesso tanto em Android quanto em iOS:</p> Categoria Tecnologias Framework React Native + Expo Integra\u00e7\u00e3o com API AgroMart API (Strapi) Gerenciamento de estado Context API UI e Estiliza\u00e7\u00e3o styled-components Formul\u00e1rios e Valida\u00e7\u00e3o Formik + Yup Navega\u00e7\u00e3o React Navigation (stack, tab e drawer navigation) Carross\u00e9is e destaques React Native Snap Carousel Mapas e geolocaliza\u00e7\u00e3o React Native Maps Consumo de API Axios Datas e formata\u00e7\u00e3o date-fns Integra\u00e7\u00f5es futuras Push notifications, gateways de pagamento, relat\u00f3rios avan\u00e7ados <p>Observa\u00e7\u00e3o</p> <p>A experi\u00eancia do aplicativo foi pensada para ser r\u00e1pida, intuitiva e confi\u00e1vel, refletindo em tempo real todas as atualiza\u00e7\u00f5es realizadas pelos produtores no AgroMart Web.</p>"},{"location":"AgroMart_Mobile/AgroMartMobile/#como-navegar-nesta-documentacao","title":"Como navegar nesta documenta\u00e7\u00e3o","text":"<p>Esta se\u00e7\u00e3o da documenta\u00e7\u00e3o do AgroMart Mobile est\u00e1 organizada para orientar o leitor quanto ao funcionamento e \u00e0s diretrizes do projeto. Recomenda-se seguir a leitura na seguinte ordem:</p> <ol> <li>Planejamento \u2192 apresenta os objetivos, funcionalidades atuais e pr\u00f3ximos desenvolvimentos;  </li> <li>Arquitetura \u2192 descreve a estrutura t\u00e9cnica, tecnologias utilizadas e integra\u00e7\u00f5es;  </li> <li>Guia de Instala\u00e7\u00e3o \u2192 explica os requisitos e o passo a passo para executar o aplicativo localmente;  </li> <li>Padr\u00f5es de Desenvolvimento \u2192 define conven\u00e7\u00f5es adotadas no c\u00f3digo, versionamento e boas pr\u00e1ticas;  </li> <li>Contribui\u00e7\u00e3o \u2192 orienta como participar do projeto, abrir issues ou enviar pull requests.  </li> </ol>"},{"location":"AgroMart_Mobile/arquitetura/","title":"Arquitetura do Sistema","text":"<p>O AgroMart Mobile foi desenvolvido com React Native (em conjunto com Expo e TypeScript) para garantir a execu\u00e7\u00e3o em m\u00faltiplas plataformas (Android e iOS) a partir de uma \u00fanica base de c\u00f3digo. O aplicativo \u00e9 totalmente integrado \u00e0 AgroMart API (Strapi), que centraliza os dados de lojas, produtos, pedidos e assinaturas.</p> <p>A arquitetura foi planejada para ser modular, organizada e escal\u00e1vel, permitindo que novos recursos sejam adicionados sem comprometer a estabilidade do sistema.</p>"},{"location":"AgroMart_Mobile/arquitetura/#estrutura-do-repositorio","title":"Estrutura do Reposit\u00f3rio","text":"<p>O reposit\u00f3rio do AgroMart Mobile segue uma divis\u00e3o l\u00f3gica entre camadas de apresenta\u00e7\u00e3o, l\u00f3gica de neg\u00f3cio e comunica\u00e7\u00e3o com a API. A estrutura principal pode ser descrita da seguinte forma:</p> <ul> <li><code>src/assets/</code> \u2192 cont\u00e9m imagens, \u00edcones e recursos est\u00e1ticos utilizados nas telas.  </li> <li><code>src/components/</code> \u2192 componentes reutiliz\u00e1veis (bot\u00f5es, inputs, cabe\u00e7alhos, cards).  </li> <li><code>src/screens/</code> \u2192 telas principais da aplica\u00e7\u00e3o (Login, Cadastro, Lojas, Produtos, Pedidos, Perfil).  </li> <li><code>src/navigation/</code> \u2192 configura\u00e7\u00e3o do React Navigation, respons\u00e1vel por rotas em stack, tab e drawer.  </li> <li><code>src/services/</code> \u2192 integra\u00e7\u00e3o com a API AgroMart, utilizando Axios para requisi\u00e7\u00f5es HTTP.  </li> <li><code>src/store/</code> \u2192 gerenciamento de estado global, utilizando Context API (com possibilidade futura de Redux).  </li> <li><code>src/utils/</code> \u2192 fun\u00e7\u00f5es auxiliares (tratamento de datas com date-fns, m\u00e1scaras e valida\u00e7\u00f5es).  </li> <li><code>src/config/</code> \u2192 configura\u00e7\u00f5es gerais do projeto, como temas, constantes e chaves de API.  </li> </ul>"},{"location":"AgroMart_Mobile/arquitetura/#fluxo-de-dados","title":"Fluxo de Dados","text":"<p>O fluxo de dados do AgroMart Mobile segue um ciclo bem definido:</p> <ol> <li>Autentica\u00e7\u00e3o: o usu\u00e1rio cria sua conta ou realiza login. O token retornado pela API \u00e9 armazenado de forma segura.  </li> <li>Consumo de dados: telas de lojas, produtos e planos consultam a API atrav\u00e9s dos servi\u00e7os centralizados em <code>src/services/</code>.  </li> <li>Gerenciamento de estado: informa\u00e7\u00f5es relevantes (usu\u00e1rio logado, pedidos, endere\u00e7o) s\u00e3o armazenadas no Context API, garantindo acesso em qualquer parte do app.  </li> <li>Atualiza\u00e7\u00f5es: a\u00e7\u00f5es como editar perfil, cadastrar endere\u00e7o ou realizar pedido disparam requisi\u00e7\u00f5es POST/PUT para a API.  </li> <li>Reflexo no Web: altera\u00e7\u00f5es feitas no Web pelos produtores (novos produtos, pre\u00e7os ou descri\u00e7\u00f5es) s\u00e3o refletidas automaticamente no Mobile, assegurando consist\u00eancia de informa\u00e7\u00f5es para o consumidor.  </li> </ol> <p>Integra\u00e7\u00e3o em tempo real</p> <p>O aplicativo foi estruturado para reagir rapidamente \u00e0s atualiza\u00e7\u00f5es da API, mantendo a sincroniza\u00e7\u00e3o entre o AgroMart Web e o Mobile.</p>"},{"location":"AgroMart_Mobile/arquitetura/#camadas-principais","title":"Camadas Principais","text":"<ul> <li>Interface e Navega\u00e7\u00e3o: constru\u00edda com React Native, Expo e React Navigation;  </li> <li>Gerenciamento de Formul\u00e1rios: Formik + Yup, garantindo valida\u00e7\u00e3o robusta;  </li> <li>Estiliza\u00e7\u00e3o: styled-components, permitindo temas e reaproveitamento de estilos;  </li> <li>Integra\u00e7\u00e3o com API: servi\u00e7os em Axios centralizados, conectando-se ao Strapi;  </li> <li>Geolocaliza\u00e7\u00e3o: react-native-maps para exibir lojas e pontos de venda pr\u00f3ximos;  </li> <li>Experi\u00eancia do Usu\u00e1rio: carross\u00e9is de destaque com Snap Carousel e formata\u00e7\u00f5es com date-fns.</li> </ul>"},{"location":"AgroMart_Mobile/arquitetura/#resumo-da-arquitetura","title":"Resumo da Arquitetura","text":"<p>O AgroMart Mobile adota uma arquitetura modular e escal\u00e1vel, com separa\u00e7\u00e3o clara de responsabilidades. Esse modelo favorece a manuten\u00e7\u00e3o, a adi\u00e7\u00e3o de novas funcionalidades e o trabalho colaborativo entre desenvolvedores, assegurando que a evolu\u00e7\u00e3o do sistema ocorra de forma organizada e sustent\u00e1vel.</p>"},{"location":"AgroMart_Mobile/arquitetura/#localizacao-no-repositorio","title":"Localiza\u00e7\u00e3o no Reposit\u00f3rio","text":"<p>Reposit\u00f3rio oficial: AgroMart Mobile no GitHub</p>"},{"location":"AgroMart_Mobile/guiaUsuario/","title":"Guia de Instala\u00e7\u00e3o do AgroMart Mobile","text":"<p>O AgroMart Mobile \u00e9 um aplicativo desenvolvido em React Native com Expo e TypeScript, projetado para ser multiplataforma (Android e iOS).  </p> <p>Este guia descreve os requisitos e o processo de instala\u00e7\u00e3o para executar o projeto em ambiente local.</p>"},{"location":"AgroMart_Mobile/guiaUsuario/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Antes de iniciar, certifique-se de ter os seguintes itens configurados:</p> <ul> <li>Node.js (vers\u00e3o recomendada: LTS 18 ou superior)  </li> <li>Yarn (gerenciador de pacotes)  </li> <li>Expo CLI \u2013 instale globalmente:  </li> </ul> <pre><code>  npm install -g expo-cli\n</code></pre> <p>Emulador Android Studio ou o aplicativo Expo Go (dispon\u00edvel na Play Store/App Store)</p> <p>AgroMart API rodando localmente ou em ambiente remoto (necess\u00e1rio para fornecer os dados ao aplicativo)</p> <p>Importante</p> <p>A API deve estar configurada e acess\u00edvel antes de iniciar o aplicativo mobile, pois o sistema consome dados diretamente dela.</p>"},{"location":"AgroMart_Mobile/guiaUsuario/#clonando-o-repositorio","title":"Clonando o Reposit\u00f3rio","text":"<p>Clone o reposit\u00f3rio oficial do AgroMart Mobile e acesse a pasta do projeto:</p> <pre><code>git clone https://github.com/AgroMart/mobile-client\ncd mobile-client\n</code></pre>"},{"location":"AgroMart_Mobile/guiaUsuario/#instalando-dependencias","title":"Instalando Depend\u00eancias","text":"<p>Com o projeto dentro da pasta, instale as depend\u00eancias com:</p> <pre><code>yarn install\n</code></pre> <p>Isso instalar\u00e1 todas as bibliotecas necess\u00e1rias, incluindo React Native, Expo, e integra\u00e7\u00f5es do projeto.</p> <p>Dica</p> <p>Caso o Yarn n\u00e3o esteja instalado, voc\u00ea pode adicion\u00e1-lo com: <pre><code>npm install -g yarn\n</code></pre></p>"},{"location":"AgroMart_Mobile/guiaUsuario/#executando-o-projeto","title":"Executando o Projeto","text":"<p>Para iniciar o servidor de desenvolvimento, use:</p> <p><pre><code>yarn start\n</code></pre> Esse comando abrir\u00e1 o Expo DevTools no navegador. A partir dele, voc\u00ea pode:</p> <ul> <li> <p>Ler o QR Code com o aplicativo Expo Go (Android/iOS) para rodar em um dispositivo f\u00edsico;</p> </li> <li> <p>Rodar no emulador Android configurado via Android Studio;</p> </li> <li> <p>Rodar no simulador iOS (dispon\u00edvel apenas em macOS com Xcode instalado).</p> </li> </ul>"},{"location":"AgroMart_Mobile/guiaUsuario/#repositorio-oficial","title":"Reposit\u00f3rio Oficial","text":"<p>Voc\u00ea pode acessar o c\u00f3digo-fonte completo do projeto diretamente no GitHub:</p> <p>Reposit\u00f3rio oficial: AgroMart Mobile no GitHub</p>"},{"location":"AgroMart_Mobile/padrao/","title":"Padr\u00f5es de Desenvolvimento \u2014 AgroMart Mobile","text":"<p>O desenvolvimento do AgroMart Mobile segue um conjunto de pr\u00e1ticas que asseguram qualidade, consist\u00eancia e alinhamento com os objetivos do projeto. Toda contribui\u00e7\u00e3o deve respeitar estas diretrizes e estar previamente definida no Kanban Board.</p>"},{"location":"AgroMart_Mobile/padrao/#fluxo-de-desenvolvimento","title":"Fluxo de Desenvolvimento","text":""},{"location":"AgroMart_Mobile/padrao/#1-definicao-da-tarefa","title":"1. Defini\u00e7\u00e3o da Tarefa","text":"<ul> <li>Toda nova funcionalidade, corre\u00e7\u00e3o de bug ou ajuste deve estar registrada no Kanban Board.  </li> <li>A tarefa precisa estar associada a um requisito v\u00e1lido ou issue aprovada.  </li> <li>Sem aprova\u00e7\u00e3o pr\u00e9via, nenhuma altera\u00e7\u00e3o deve ser iniciada.</li> </ul>"},{"location":"AgroMart_Mobile/padrao/#2-criacao-da-branch","title":"2. Cria\u00e7\u00e3o da Branch","text":"<ul> <li>A branch deve ser criada a partir da <code>devel</code>.  </li> <li>Use o padr\u00e3o de nomenclatura:  </li> <li><code>feature/nome-da-feature</code> \u2192 novas funcionalidades.  </li> <li><code>fix/nome-do-bug</code> \u2192 corre\u00e7\u00f5es de erro.  </li> <li><code>docs/nome-da-doc</code> \u2192 altera\u00e7\u00f5es em documenta\u00e7\u00e3o.  </li> </ul>"},{"location":"AgroMart_Mobile/padrao/#3-desenvolvimento","title":"3. Desenvolvimento","text":"<ul> <li>Seguir as boas pr\u00e1ticas de React Native + Expo.  </li> <li>Componentes devem ser modulares e reutiliz\u00e1veis (criar em <code>src/components</code>).  </li> <li>Evitar l\u00f3gica duplicada \u2192 criar fun\u00e7\u00f5es auxiliares em <code>src/utils</code>.  </li> <li>Centralizar chamadas de API em <code>src/services</code> usando Axios.  </li> <li>Utilizar Context API (ou Redux, quando aprovado) para estado global.  </li> <li>Para formul\u00e1rios, usar Formik + Yup.  </li> <li>Estiliza\u00e7\u00e3o preferencial com styled-components.</li> </ul>"},{"location":"AgroMart_Mobile/padrao/#4-commits","title":"4. Commits","text":"<ul> <li>Mensagens em portugu\u00eas e no ger\u00fandio.  </li> <li>Devem sempre referenciar a issue ou tarefa:  </li> </ul> <p><code>bash (#45) Criando tela de listagem de lojas (#52) Ajustando valida\u00e7\u00e3o de endere\u00e7o no cadastro</code></p>"},{"location":"AgroMart_Mobile/padrao/#5-testes-locais","title":"5. Testes Locais","text":"<ul> <li>Antes do commit, rodar o app no Expo Go ou emulador.  </li> <li>Validar fluxos principais: login, listagem de lojas, pedidos e perfil.  </li> <li>Checar warnings no console e corrigir sempre que poss\u00edvel.</li> </ul>"},{"location":"AgroMart_Mobile/padrao/#6-pull-request","title":"6. Pull Request","text":"<ul> <li>Criar PR para a branch <code>devel</code>, nunca diretamente em <code>master</code>.  </li> <li>O PR deve conter:</li> <li>Descri\u00e7\u00e3o clara da mudan\u00e7a.  </li> <li>Prints ou v\u00eddeos (quando aplic\u00e1vel).  </li> <li>Refer\u00eancia \u00e0 issue/tarefa do Kanban.  </li> <li>Requer pelo menos 1 revis\u00e3o/aprova\u00e7\u00e3o antes do merge.</li> </ul>"},{"location":"AgroMart_Mobile/padrao/#regras-obrigatorias","title":"Regras Obrigat\u00f3rias","text":"<p>Obrigat\u00f3rio</p> <p>N\u00e3o desenvolver sem tarefa previamente definida no Kanban Board. Cada PR deve conter apenas uma altera\u00e7\u00e3o espec\u00edfica. Sempre seguir o guia de contribui\u00e7\u00e3o antes de abrir PR. Respeitar a pol\u00edtica de commits e de branches.</p>"},{"location":"AgroMart_Mobile/padrao/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Prefira componentes pequenos e de f\u00e1cil manuten\u00e7\u00e3o.  </li> <li>Mantenha nomes descritivos para vari\u00e1veis, fun\u00e7\u00f5es e arquivos.  </li> <li>Documente trechos de c\u00f3digo mais complexos com coment\u00e1rios.  </li> <li>Sempre valide no emulador Android (m\u00ednimo) e, quando poss\u00edvel, tamb\u00e9m no iOS.  </li> <li>Atualize a documenta\u00e7\u00e3o se sua altera\u00e7\u00e3o impactar o uso da aplica\u00e7\u00e3o.  </li> </ul>"},{"location":"AgroMart_Mobile/padrao/#exemplo-de-fluxo-real","title":"Exemplo de Fluxo Real","text":"<ol> <li>Tarefa criada no Kanban: \u201cImplementar hist\u00f3rico de pedidos\u201d (#60).  </li> <li>Desenvolvedor cria a branch: </li> </ol> <p><code>bash  git checkout -b feature/historico-pedidos</code> </p> <ol> <li> <p>Implementa\u00e7\u00e3o realizada no diret\u00f3rio src/screens/OrdersHistory.</p> </li> <li> <p>Commit:</p> </li> </ol> <p><code>bash git commit -m \"(#60) Criando tela de hist\u00f3rico de pedidos\"</code></p> <ol> <li> <p>Pull Request aberto para devel, revisado e aprovado.</p> </li> <li> <p>Merge realizado conforme as regras de contribui\u00e7\u00e3o.</p> </li> </ol>"},{"location":"AgroMart_Mobile/planejamento/","title":"Planejamento","text":"<p>O AgroMart Mobile \u00e9 a porta de entrada do consumidor no ecossistema AgroMart. Seu objetivo central \u00e9 aproximar a agricultura familiar dos consumidores urbanos, garantindo que alimentos frescos, de qualidade e de origem confi\u00e1vel cheguem a quem mais precisa.  </p> <p>Nosso p\u00fablico-alvo s\u00e3o consumidores conscientes, que buscam uma alternativa mais saud\u00e1vel e sustent\u00e1vel ao consumo tradicional, al\u00e9m de agricultores que precisam de visibilidade e escoamento justo de sua produ\u00e7\u00e3o. Essa rela\u00e7\u00e3o \u00e9 fundamental n\u00e3o apenas para o com\u00e9rcio, mas tamb\u00e9m para a constru\u00e7\u00e3o de uma economia mais solid\u00e1ria e local, fortalecendo os la\u00e7os entre produtor e consumidor.  </p> <p>Importante</p> <p>O AgroMart Mobile n\u00e3o \u00e9 apenas um aplicativo de compras, mas um elo de confian\u00e7a entre produtor e consumidor.</p>"},{"location":"AgroMart_Mobile/planejamento/#como-surgiu","title":"Como Surgiu","text":"<p>O projeto nasceu em um Hackathon da UnB-FGA em 2020, cujo tema era \u201cCultivando Conex\u00f5es\u201d. Naquele momento de isolamento social, os agricultores enfrentavam dificuldades para divulgar seus produtos e alcan\u00e7ar os consumidores.  </p> <p>A solu\u00e7\u00e3o proposta foi um aplicativo simples, onde cada agricultor pudesse: - Cadastrar sua loja ou barraca com informa\u00e7\u00f5es b\u00e1sicas; - Divulgar produtos com pre\u00e7os e descri\u00e7\u00f5es; - Compartilhar contatos para negocia\u00e7\u00e3o direta; - Permitir que consumidores encontrassem produtores pr\u00f3ximos de sua regi\u00e3o.  </p> <p>Com o tempo, a ideia evoluiu para o AgroMart Mobile que conhecemos hoje: um aplicativo robusto, conectado \u00e0 AgroMart API e sincronizado com o AgroMart Web, garantindo consist\u00eancia das informa\u00e7\u00f5es.</p>"},{"location":"AgroMart_Mobile/planejamento/#planejamento-de-tarefas-kanban-board","title":"Planejamento de Tarefas \u2014 Kanban Board","text":"<p>Toda a organiza\u00e7\u00e3o das tarefas do AgroMart Mobile ser\u00e1 feita no Kanban Board, onde teremos:  </p> <ul> <li>Backlog: ideias, sugest\u00f5es e demandas futuras.  </li> <li>To Do: tarefas aprovadas e prontas para in\u00edcio.  </li> <li>In Progress: atividades em desenvolvimento.  </li> <li>Review: altera\u00e7\u00f5es conclu\u00eddas e aguardando revis\u00e3o.  </li> <li>Done: entregas finalizadas e integradas.  </li> </ul> <p>Dica de Organiza\u00e7\u00e3o</p> <p>Nenhuma tarefa pode ser iniciada sem estar previamente registrada no Kanban Board. Isso garante clareza, rastreabilidade e alinhamento entre todos os colaboradores.</p>"},{"location":"AgroMart_Mobile/planejamento/#requisitos-de-software-e-modelagem","title":"Requisitos de Software e Modelagem","text":"<p>Nesta se\u00e7\u00e3o ser\u00e3o detalhados os requisitos funcionais e n\u00e3o funcionais do AgroMart Mobile, bem como a modelagem de softwares (diagramas, casos de uso, fluxos e entidades).  </p> <p>\u26a0\ufe0f Este conte\u00fado ser\u00e1 preenchido em etapas futuras.</p>"},{"location":"AgroMart_Web/AgroMartWeb/","title":"AgroMart Web","text":"<p>O AgroMart Web foi concebido como a plataforma administrativa do agricultor dentro do ecossistema AgroMart.Diferentemente do aplicativo mobile, que concentra a intera\u00e7\u00e3o com os consumidores, o sistema Web tem como finalidade organizar e centralizar a gest\u00e3o das informa\u00e7\u00f5es do produtor, oferecendo um ambiente simples e eficiente para o controle das CSAs e dos produtos.</p> <p>Mais do que apenas um painel de cadastro, o AgroMart Web busca proporcionar ao agricultor um espa\u00e7o unificado de gest\u00e3o, no qual ele possa atualizar dados de sua loja, cadastrar novos produtos, ajustar pre\u00e7os, inserir descri\u00e7\u00f5es e manter fotos atualizadas. Essa centraliza\u00e7\u00e3o facilita o dia a dia do produtor, reduz a duplicidade de informa\u00e7\u00f5es e garante que os consumidores, ao acessarem o aplicativo mobile, encontrem sempre dados corretos e confi\u00e1veis.</p> <p>O objetivo tamb\u00e9m envolve atender \u00e0s especificidades da agricultura familiar, oferecendo uma ferramenta acess\u00edvel, leve e pr\u00e1tica, que possa ser utilizada por produtores com diferentes n\u00edveis de familiaridade com a tecnologia.Nesse sentido, o AgroMart Web foi planejado para reduzir barreiras digitais, permitindo que a gest\u00e3o de uma CSA seja feita de forma mais organizada e eficiente.</p> <p>Em s\u00edntese, o AgroMart Web existe para concentrar a administra\u00e7\u00e3o das informa\u00e7\u00f5es do produtor em um s\u00f3 lugar, garantindo consist\u00eancia entre os diferentes canais do ecossistema AgroMart e fortalecendo a atua\u00e7\u00e3o do agricultor no ambiente digital.</p>"},{"location":"AgroMart_Web/AgroMartWeb/#objetivo","title":"Objetivo","text":"<p>O objetivo principal do AgroMart Web \u00e9 disponibilizar ao agricultor um painel de gest\u00e3o digital capaz de:</p> <ul> <li>Registrar e atualizar dados da loja ou ponto de venda;  </li> <li>Cadastrar produtos com informa\u00e7\u00f5es completas (nome, descri\u00e7\u00e3o, pre\u00e7o, imagens e categorias);  </li> <li>Gerenciar altera\u00e7\u00f5es de forma aut\u00f4noma;  </li> <li>Assegurar que todas as informa\u00e7\u00f5es fiquem sincronizadas com o aplicativo mobile, garantindo consist\u00eancia entre as plataformas.  </li> </ul> <p>Importante</p> <p>O AgroMart Web \u00e9 voltado exclusivamente aos produtores e n\u00e3o ao consumidor final. Sua fun\u00e7\u00e3o \u00e9 oferecer um ambiente administrativo confi\u00e1vel para o gerenciamento de dados.</p>"},{"location":"AgroMart_Web/AgroMartWeb/#funcionalidades","title":"Funcionalidades","text":"<p>O AgroMart Web j\u00e1 se encontra em funcionamento e oferece aos produtores um conjunto de funcionalidades administrativas que permitem gerenciar suas opera\u00e7\u00f5es de forma pr\u00e1tica e centralizada. Entre os principais recursos dispon\u00edveis est\u00e3o:</p> <ul> <li>Cadastro e autentica\u00e7\u00e3o de produtores: sistema de login e registro seguro, garantindo que cada produtor tenha seu pr\u00f3prio acesso administrativo;  </li> <li>Gest\u00e3o de lojas: possibilidade de criar e atualizar informa\u00e7\u00f5es da loja ou ponto de venda, incluindo dados gerais, localiza\u00e7\u00e3o e formas de contato;  </li> <li>Gerenciamento de produtos: inclus\u00e3o de novos itens no cat\u00e1logo, com suporte a descri\u00e7\u00e3o detalhada, pre\u00e7o, imagens e categorias, al\u00e9m da edi\u00e7\u00e3o de informa\u00e7\u00f5es j\u00e1 cadastradas;  </li> <li>Integra\u00e7\u00e3o direta com o AgroMart Mobile: todas as atualiza\u00e7\u00f5es feitas no Web refletem imediatamente no aplicativo mobile, assegurando que os consumidores encontrem dados corretos e atualizados.  </li> </ul>"},{"location":"AgroMart_Web/AgroMartWeb/#proximos-desenvolvimentos","title":"Pr\u00f3ximos Desenvolvimentos","text":"<p>Mesmo j\u00e1 funcional, o AgroMart Web continuar\u00e1 sendo aprimorado para oferecer uma experi\u00eancia cada vez mais completa ao produtor. Entre os pontos planejados est\u00e3o:</p> <ul> <li>Aprimoramento da usabilidade: cria\u00e7\u00e3o de uma interface mais clara e objetiva, que facilite a compreens\u00e3o do agricultor no uso di\u00e1rio da plataforma;  </li> <li>Camada visual sobre o Strapi: desenvolvimento de uma capa mais intuitiva sobre o painel administrativo do Strapi, simplificando a navega\u00e7\u00e3o e reduzindo a complexidade t\u00e9cnica para o usu\u00e1rio final.  </li> </ul>"},{"location":"AgroMart_Web/AgroMartWeb/#stack-tecnologica","title":"Stack Tecnol\u00f3gica","text":"<p>A plataforma Web adota tecnologias modernas que permitem escalabilidade e robustez, alinhadas ao crescimento do projeto:</p> Camada Tecnologias Frontend Next.js, React e TypeScript Backend API AgroMart (Strapi) Banco de Dados Relacional, gerenciado pela API Integra\u00e7\u00f5es Previstas Geolocaliza\u00e7\u00e3o, upload otimizado de imagens e meios de pagamento <p>Observa\u00e7\u00e3o</p> <p>Embora o Strapi n\u00e3o seja naturalmente intuitivo para usu\u00e1rios sem familiaridade t\u00e9cnica, o AgroMart Web foi planejado para oferecer uma camada de interface mais clara e organizada, tornando a experi\u00eancia de gest\u00e3o mais simples, acess\u00edvel e adequada \u00e0 realidade do agricultor.</p>"},{"location":"AgroMart_Web/AgroMartWeb/#como-navegar-nesta-documentacao","title":"Como Navegar Nesta Documenta\u00e7\u00e3o","text":"<p>Esta se\u00e7\u00e3o da documenta\u00e7\u00e3o do AgroMart Web est\u00e1 organizada para facilitar a compreens\u00e3o do projeto e do sistema. Recomenda-se seguir a leitura na seguinte ordem:</p> <ol> <li>Planejamento \u2192 apresenta como foram definidos os requisitos, funcionalidades atuais e pr\u00f3ximos desenvolvimentos;  </li> <li>Arquitetura \u2192 descreve a estrutura t\u00e9cnica, tecnologias utilizadas e comunica\u00e7\u00e3o com a API;  </li> <li>Guia de Instala\u00e7\u00e3o \u2192 explica os requisitos e o passo a passo para executar o sistema localmente;  </li> <li>Padr\u00f5es de Desenvolvimento \u2192 define conven\u00e7\u00f5es adotadas no c\u00f3digo, versionamento e boas pr\u00e1ticas;  </li> <li>Contribui\u00e7\u00e3o \u2192 orienta como participar do projeto, abrir issues ou enviar pull requests.  </li> </ol>"},{"location":"AgroMart_Web/arquitetura/","title":"Arquitetura do Sistema","text":"<p>O AgroMart Web e a AgroMart API formam o n\u00facleo administrativo do ecossistema AgroMart. Enquanto o Web atua como painel de gest\u00e3o para o agricultor, a API (implementada em Strapi) centraliza e prov\u00ea todos os dados necess\u00e1rios, garantindo consist\u00eancia com o Mobile.  </p> <p>Essa integra\u00e7\u00e3o permite que os produtores administrem suas lojas, cadastrem produtos e mantenham seus cat\u00e1logos sempre atualizados, enquanto consumidores acessam as mesmas informa\u00e7\u00f5es em tempo real pelo aplicativo.</p>"},{"location":"AgroMart_Web/arquitetura/#objetivo-e-escopo","title":"Objetivo e Escopo","text":"<ul> <li>AgroMart Web \u2192 plataforma administrativa para agricultores, com painel simples e acess\u00edvel para gerenciar lojas e produtos;  </li> <li>AgroMart API \u2192 \u00fanica fonte de verdade, respons\u00e1vel por armazenar e disponibilizar dados (produtores, lojas, produtos, pedidos e planos).  </li> </ul> <p>Integra\u00e7\u00e3o</p> <p>O Web atua como interface visual do agricultor, enquanto a API \u00e9 a camada de dados que garante sincroniza\u00e7\u00e3o cont\u00ednua com o Mobile.</p>"},{"location":"AgroMart_Web/arquitetura/#estrutura-do-repositorio-web","title":"Estrutura do Reposit\u00f3rio Web","text":"<p>O reposit\u00f3rio do AgroMart Web foi planejado com Next.js + React + TypeScript, seguindo uma estrutura modular e escal\u00e1vel:</p> <ul> <li><code>/public/</code> \u2192 arquivos est\u00e1ticos (imagens, \u00edcones, logotipos);  </li> <li><code>/pages/</code> \u2192 defini\u00e7\u00e3o de rotas e p\u00e1ginas principais (Login, Dashboard, Cadastro de Produtos);  </li> <li><code>/components/</code> \u2192 componentes reutiliz\u00e1veis (formul\u00e1rios, tabelas, bot\u00f5es, cards);  </li> <li><code>/styles/</code> \u2192 estiliza\u00e7\u00e3o (CSS Modules, Tailwind ou styled-components);  </li> <li><code>/services/</code> \u2192 integra\u00e7\u00e3o com a API via Axios;  </li> <li><code>/contexts/</code> \u2192 gerenciamento de estado global (Context API);  </li> <li><code>/utils/</code> \u2192 fun\u00e7\u00f5es auxiliares (datas, m\u00e1scaras, valida\u00e7\u00f5es);  </li> <li><code>/hooks/</code> \u2192 hooks customizados para abstrair l\u00f3gicas recorrentes.  </li> </ul>"},{"location":"AgroMart_Web/arquitetura/#estrutura-do-repositorio-api-strapi","title":"Estrutura do Reposit\u00f3rio API (Strapi)","text":"<p>A API do AgroMart segue a arquitetura padr\u00e3o do Strapi v4, garantindo modularidade e seguran\u00e7a:</p> <ul> <li><code>/src/api/*</code> \u2192 content-types (produtos, lojas, pedidos, assinaturas), com rotas, controllers e services;  </li> <li><code>/config/*</code> \u2192 configura\u00e7\u00e3o de ambiente, middlewares, CORS e seguran\u00e7a;  </li> <li><code>/database/*</code> \u2192 defini\u00e7\u00e3o do cliente do banco (PostgreSQL);  </li> <li><code>/public/uploads/</code> \u2192 armazenamento local de m\u00eddia (em produ\u00e7\u00e3o usa provider externo: S3, GCS, Cloudinary);  </li> <li><code>/src/extensions/*</code> \u2192 extens\u00f5es de plugins (users-permissions, upload, etc).  </li> </ul> <p>Dom\u00ednios Principais:</p> <ul> <li>Produtor (<code>user</code>) com role <code>producer</code>;  </li> <li>Loja (<code>store</code>) com dados b\u00e1sicos e localiza\u00e7\u00e3o;  </li> <li>Produto (<code>product</code>) com pre\u00e7o, descri\u00e7\u00e3o e imagens;  </li> <li>Pedido (<code>order</code>) com itens e status;  </li> <li>Assinatura (<code>plan/subscription</code>) para CSAs;  </li> <li>Endere\u00e7o (<code>address</code>) vinculado ao consumidor.  </li> </ul>"},{"location":"AgroMart_Web/arquitetura/#fluxo-de-dados","title":"Fluxo de Dados","text":"<ol> <li>Login e Autentica\u00e7\u00e3o </li> <li>Agricultor acessa o Web \u2192 login via API (JWT).  </li> <li> <p>O JWT garante seguran\u00e7a e pap\u00e9is de acesso (<code>producer</code>, <code>consumer</code>, <code>admin</code>).  </p> </li> <li> <p>Gest\u00e3o de Lojas e Produtos (Web) </p> </li> <li> <p>O produtor cadastra/edita informa\u00e7\u00f5es \u2192 Web envia via Axios \u2192 API persiste no banco.  </p> </li> <li> <p>Consumo pelo Mobile </p> </li> <li> <p>O Mobile consome a API diretamente \u2192 dados refletidos em tempo real.  </p> </li> <li> <p>Pedidos e Assinaturas </p> </li> <li>Mobile cria pedidos/assinaturas \u2192 API armazena \u2192 Web exibe relat\u00f3rios simplificados para o agricultor.  </li> </ol>"},{"location":"AgroMart_Web/arquitetura/#camadas-principais","title":"Camadas Principais","text":""},{"location":"AgroMart_Web/arquitetura/#agromart-web","title":"AgroMart Web","text":"<ul> <li>Interface: Next.js + React, responsiva e acess\u00edvel;  </li> <li>Estado: Context API (ou Redux/Zustand em futuras vers\u00f5es);  </li> <li>Servi\u00e7os: integra\u00e7\u00e3o centralizada com API (Axios);  </li> <li>Estiliza\u00e7\u00e3o: CSS Modules ou styled-components.  </li> </ul>"},{"location":"AgroMart_Web/arquitetura/#agromart-api","title":"AgroMart API","text":"<ul> <li>Core: Node.js + Strapi;  </li> <li>Autentica\u00e7\u00e3o: JWT + roles (<code>producer</code>, <code>consumer</code>, <code>admin</code>);  </li> <li>Banco de Dados: PostgreSQL;  </li> <li>M\u00eddia: plugin de upload (local ou providers externos);  </li> <li>Endpoints REST: content-types com filtros, pagina\u00e7\u00e3o e populate.  </li> </ul>"},{"location":"AgroMart_Web/arquitetura/#configuracao-e-ambiente","title":"Configura\u00e7\u00e3o e Ambiente","text":"<p>Exemplo de <code>.env</code> para a API AgroMart:</p> <pre><code>HOST=0.0.0.0\nPORT=1337\nAPP_KEYS=...\nJWT_SECRET=...\nDATABASE_CLIENT=postgres\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_NAME=agromart\nDATABASE_USERNAME=agromart_user\nDATABASE_PASSWORD=******\n</code></pre>"},{"location":"AgroMart_Web/arquitetura/#ciclo-de-requisicoes-alto-nivel","title":"Ciclo de Requisi\u00e7\u00f5es (Alto N\u00edvel)","text":"<ul> <li> <p>Web (produtor) cria/edita loja e produtos \u2192 API persiste;</p> </li> <li> <p>Mobile (consumidor) consulta lojas/produtos \u2192 API responde;</p> </li> <li> <p>Mobile cria pedidos/assinaturas \u2192 API registra e vincula ao consumidor;</p> </li> </ul> <p>Atualiza\u00e7\u00f5es fluem entre todos os canais, mantendo consist\u00eancia.</p>"},{"location":"AgroMart_Web/arquitetura/#qualidade-logs-e-observabilidade","title":"Qualidade, Logs e Observabilidade","text":"<ul> <li> <p>Valida\u00e7\u00e3o: schemas do Strapi garantem integridade;</p> </li> <li> <p>Policies/Middlewares: aplicados para auditoria, sanitiza\u00e7\u00e3o e autoriza\u00e7\u00e3o;</p> </li> <li> <p>Logs: padronizados em JSON, integr\u00e1veis a ELK, Loki ou CloudWatch;</p> </li> <li> <p>CORS e Rate Limiting: configurados para seguran\u00e7a de acesso.</p> </li> </ul>"},{"location":"AgroMart_Web/arquitetura/#evolucao-arquitetural","title":"Evolu\u00e7\u00e3o Arquitetural","text":"<ul> <li> <p>Camada visual aprimorada no Web, reduzindo complexidade do Strapi;</p> </li> <li> <p>Normaliza\u00e7\u00e3o de responses na API para reduzir acoplamento;</p> </li> <li> <p>Cache de leitura para cat\u00e1logos de alta demanda;</p> </li> <li> <p>Filas e jobs ass\u00edncronos (notifica\u00e7\u00f5es, uploads, processamento);</p> </li> <li> <p>Versionamento da API (/api/v1) e feature flags para novas funcionalidades.</p> </li> </ul> <p>Integra\u00e7\u00e3o</p> <p>O AgroMart Web \u00e9 a camada visual e administrativa do sistema, enquanto a AgroMart API \u00e9 a camada de dados e regras de neg\u00f3cio, assegurando uma comunica\u00e7\u00e3o cont\u00ednua e confi\u00e1vel entre Web e Mobile.</p>"},{"location":"AgroMart_Web/arquitetura/#localizacao-no-repositorio","title":"Localiza\u00e7\u00e3o no Reposit\u00f3rio","text":"<p>Reposit\u00f3rio oficial: AgroMart Web no GitHub</p>"},{"location":"AgroMart_Web/guiaUsuario/","title":"Guia de Instala\u00e7\u00e3o do AgroMart Web","text":"<p>O AgroMart Web \u00e9 a plataforma administrativa desenvolvida em Next.js com TypeScript, respons\u00e1vel por oferecer aos produtores um painel centralizado de gest\u00e3o de lojas e produtos. Integrado diretamente \u00e0 AgroMart API (Strapi), o sistema garante que todas as informa\u00e7\u00f5es cadastradas pelos agricultores estejam sempre sincronizadas com o aplicativo mobile.  </p> <p>Este guia apresenta os requisitos, as etapas de configura\u00e7\u00e3o e o processo de execu\u00e7\u00e3o para rodar o projeto em ambiente local.</p>"},{"location":"AgroMart_Web/guiaUsuario/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Antes de iniciar, certifique-se de ter os seguintes itens configurados:</p> <ul> <li>Node.js (vers\u00e3o recomendada: LTS 18+)  </li> <li>npm ou Yarn (gerenciadores de pacotes)  </li> <li>Git para clonar o reposit\u00f3rio  </li> <li>AgroMart API rodando localmente ou em ambiente remoto (necess\u00e1ria para o fornecimento dos dados) </li> <li>(Opcional) PostgreSQL configurado, caso deseje rodar a API AgroMart junto ao ambiente Web  </li> </ul>"},{"location":"AgroMart_Web/guiaUsuario/#clonar-o-repositorio","title":"Clonar o Reposit\u00f3rio","text":"<pre><code>git clone https://github.com/AgroMart/agromart-web.git\ncd agromart-web\n</code></pre>"},{"location":"AgroMart_Web/guiaUsuario/#instalar-dependencias","title":"Instalar Depend\u00eancias","text":"<pre><code># com npm\nnpm install\n\n# ou com yarn\nyarn install\n</code></pre>"},{"location":"AgroMart_Web/guiaUsuario/#configurar-variaveis-de-ambiente","title":"Configurar Vari\u00e1veis de Ambiente","text":"<p>Crie um arquivo .env.local na raiz do projeto e copie o conte\u00fado do modelo abaixo (.env.sample):</p> <pre><code># ===================================================================\n# ARQUIVO DE CONFIGURA\u00c7\u00c3O DO PROJETO (MODELO)\n# ===================================================================\n# Instru\u00e7\u00f5es:\n# 1. Copie este arquivo com o nome \".env.local\" (para Web).\n# 2. Preencha os campos conforme indicado.\n# 3. NUNCA compartilhe este arquivo com credenciais reais.\n# ===================================================================\n\n# === Configura\u00e7\u00f5es Web (Next.js) ===\nNEXT_PUBLIC_API_URL=http://localhost:1337\nNEXT_PUBLIC_BASE_URL=http://localhost:3000\nNEXT_PUBLIC_UPLOAD_URL=http://localhost:1337/uploads\nNEXT_PUBLIC_GOOGLE_MAPS_API_KEY=\n\nNODE_ENV=development\nPORT=3000\n\n# === Configura\u00e7\u00f5es da API (Strapi) ===\nHOST=0.0.0.0\nPORT=1337\n\nAPP_KEYS=chave1,chave2,chave3\nAPI_TOKEN_SALT=sua_api_token_salt\nJWT_SECRET=sua_jwt_secret\nADMIN_JWT_SECRET=sua_admin_jwt_secret\n\n# Database (Postgres recomendado)\nDATABASE_CLIENT=postgres\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_NAME=agromart\nDATABASE_USERNAME=agromart_user\nDATABASE_PASSWORD=sua_senha_segura\nDATABASE_SSL=false\n\n# Upload Provider (Exemplo AWS S3)\n# STRAPI_UPLOAD_PROVIDER=aws-s3\n# AWS_ACCESS_KEY_ID=sua_chave\n# AWS_SECRET_ACCESS_KEY=sua_chave_secreta\n# AWS_REGION=sa-east-1\n# AWS_S3_BUCKET=nome_bucket\n\n# Outro provedor (ex.: Cloudinary)\n# STRAPI_UPLOAD_PROVIDER=cloudinary\n# CLOUDINARY_NAME=...\n# CLOUDINARY_API_KEY=...\n# CLOUDINARY_API_SECRET=...\n</code></pre>"},{"location":"AgroMart_Web/guiaUsuario/#rodar-em-ambiente-de-desenvolvimento","title":"Rodar em Ambiente de Desenvolvimento","text":"<pre><code>npm run dev\n# ou\nyarn dev\n</code></pre> <p>A aplica\u00e7\u00e3o estar\u00e1 dispon\u00edvel em: http://localhost:3000</p>"},{"location":"AgroMart_Web/guiaUsuario/#executar-a-api-agromart","title":"Executar a API AgroMart","text":"<p>Para rodar a API (Strapi), siga as etapas abaixo:</p> <pre><code>git clone https://github.com/AgroMart/api.git\ncd api\nyarn install\nyarn develop\n</code></pre> <p>A API estar\u00e1 dispon\u00edvel em:  http://localhost:1337</p> <p>Dica</p> <p>Certifique-se de que a API AgroMart esteja rodando antes de iniciar o Web, pois o frontend consome dados diretamente dela.</p>"},{"location":"AgroMart_Web/guiaUsuario/#repositorio-oficial","title":"Reposit\u00f3rio Oficial","text":"<p>Reposit\u00f3rio oficial: AgroMart Web no GitHub</p>"},{"location":"AgroMart_Web/padrao/","title":"Padr\u00f5es de Desenvolvimento \u2014 AgroMart Web","text":"<p>O AgroMart Web \u00e9 a plataforma administrativa destinada aos produtores, constru\u00edda em Next.js com TypeScript e integrada \u00e0 AgroMart API (Strapi). Para manter a consist\u00eancia e qualidade do projeto, todo desenvolvimento deve seguir este padr\u00e3o.</p>"},{"location":"AgroMart_Web/padrao/#fluxo-de-desenvolvimento","title":"Fluxo de Desenvolvimento","text":""},{"location":"AgroMart_Web/padrao/#1-definicao-da-tarefa","title":"1. Defini\u00e7\u00e3o da Tarefa","text":"<ul> <li>Toda altera\u00e7\u00e3o deve partir de uma tarefa definida no Kanban Board.  </li> <li>A tarefa deve estar associada a um requisito v\u00e1lido ou issue aprovada.  </li> <li>Sem aprova\u00e7\u00e3o pr\u00e9via, nenhuma implementa\u00e7\u00e3o deve ser iniciada.  </li> </ul>"},{"location":"AgroMart_Web/padrao/#2-criacao-da-branch","title":"2. Cria\u00e7\u00e3o da Branch","text":"<ul> <li>Crie branches a partir de <code>devel</code>.  </li> <li>Padr\u00f5es de nomenclatura:  </li> <li><code>feature/nome-da-feature</code> \u2192 novas funcionalidades;  </li> <li><code>fix/nome-do-bug</code> \u2192 corre\u00e7\u00f5es;  </li> <li><code>docs/nome-da-doc</code> \u2192 documenta\u00e7\u00e3o.  </li> </ul>"},{"location":"AgroMart_Web/padrao/#3-desenvolvimento","title":"3. Desenvolvimento","text":"<ul> <li>Seguir boas pr\u00e1ticas de Next.js + React com TypeScript.  </li> <li>Componentes reutiliz\u00e1veis \u2192 <code>src/components</code>;  </li> <li>Hooks personalizados \u2192 <code>src/hooks</code>;  </li> <li>Integra\u00e7\u00f5es com API \u2192 <code>src/services</code> (via Axios);  </li> <li>Configura\u00e7\u00f5es globais (tema, constantes) \u2192 <code>src/config</code>;  </li> <li>Estiliza\u00e7\u00e3o \u2192 CSS-in-JS (styled-components, Tailwind) ou CSS Modules;  </li> <li>Internacionaliza\u00e7\u00e3o (i18n) \u2192 utilizar para textos, evitando strings fixas em componentes.  </li> </ul>"},{"location":"AgroMart_Web/padrao/#4-commits","title":"4. Commits","text":"<ul> <li>Mensagens em portugu\u00eas no ger\u00fandio.  </li> <li>Sempre referenciar a issue ou tarefa:  </li> </ul> <pre><code>(#72) Criando dashboard de lojas\n(#81) Ajustando fluxo de autentica\u00e7\u00e3o\n</code></pre>"},{"location":"AgroMart_Web/padrao/#5-testes-locais","title":"5. Testes Locais","text":"<ul> <li>Rodar <code>npm run dev</code> ou <code>yarn dev</code> e validar em <code>http://localhost:3000</code>.  </li> <li>Corrigir warnings antes do commit.  </li> <li>Testar fluxos principais: login, cadastro de loja, cadastro de produto.  </li> </ul>"},{"location":"AgroMart_Web/padrao/#6-pull-request","title":"6. Pull Request","text":"<ul> <li>Criar PR para <code>devel</code>, nunca direto em <code>master</code>.  </li> <li>O PR deve conter:</li> <li>Descri\u00e7\u00e3o clara da mudan\u00e7a;  </li> <li>Prints (ou v\u00eddeos) de telas alteradas/adicionadas;  </li> <li>Refer\u00eancia ao n\u00famero da issue/tarefa.  </li> <li>\u00c9 necess\u00e1ria pelo menos 1 aprova\u00e7\u00e3o antes do merge.  </li> </ul>"},{"location":"AgroMart_Web/padrao/#regras-obrigatorias","title":"Regras Obrigat\u00f3rias","text":"<p>Obrigat\u00f3rio</p> <p>N\u00e3o desenvolver sem tarefa definida no Kanban Board. Cada PR deve conter apenas uma altera\u00e7\u00e3o espec\u00edfica. Seguir as instru\u00e7\u00f5es do Guia de Contribui\u00e7\u00e3o. Respeitar a pol\u00edtica de commits e branches.</p>"},{"location":"AgroMart_Web/padrao/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ul> <li>Prefira componentes pequenos, desacoplados e reutiliz\u00e1veis.  </li> <li>Utilize TypeScript com tipagem estrita para evitar erros em tempo de execu\u00e7\u00e3o.  </li> <li>Centralize requisi\u00e7\u00f5es HTTP em <code>src/services</code>.  </li> <li>Documente todas as vari\u00e1veis de ambiente em <code>.env.local</code>.  </li> <li>Evite duplica\u00e7\u00e3o de c\u00f3digo \u2014 use hooks ou utils para l\u00f3gica repetida.  </li> <li>Mantenha consist\u00eancia visual com o tema global do projeto.  </li> <li>Atualize a documenta\u00e7\u00e3o sempre que houver impacto em funcionalidades.  </li> </ul>"},{"location":"AgroMart_Web/padrao/#exemplo-de-fluxo-real","title":"Exemplo de Fluxo Real","text":"<ol> <li>Tarefa criada no Kanban: \u201cImplementar p\u00e1gina de relat\u00f3rios\u201d (#88).  </li> <li>Cria\u00e7\u00e3o da branch: <pre><code>git checkout -b feature/pagina-relatorios\n</code></pre></li> <li> <p>Desenvolvimento em src/pages/reports/index.tsx e componentes auxiliares em src/components/Reports/.</p> </li> <li> <p>Commit:</p> </li> </ol> <pre><code>git commit -m \"(#88) Criando p\u00e1gina de relat\u00f3rios\"\n</code></pre> <ol> <li> <p>PR aberto para devel, revisado e aprovado.</p> </li> <li> <p>Merge realizado conforme as regras.</p> </li> </ol>"},{"location":"AgroMart_Web/planejamento/","title":"Planejamento","text":"<p>O AgroMart Web \u00e9 a plataforma administrativa do agricultor dentro do ecossistema AgroMart. Enquanto o aplicativo mobile \u00e9 voltado ao consumidor final, o Web concentra as funcionalidades de gest\u00e3o de lojas, produtos e informa\u00e7\u00f5es do produtor.  </p> <p>Nosso p\u00fablico-alvo s\u00e3o os agricultores familiares que precisam de uma ferramenta simples, acess\u00edvel e confi\u00e1vel para cadastrar e atualizar seus dados de forma aut\u00f4noma. A relev\u00e2ncia do Web est\u00e1 em garantir que os consumidores sempre encontrem informa\u00e7\u00f5es consistentes e atualizadas, fortalecendo a confian\u00e7a no ecossistema AgroMart.  </p> <p>Importante</p> <p>O AgroMart Web n\u00e3o \u00e9 apenas um painel administrativo, mas uma ferramenta estrat\u00e9gica que d\u00e1 ao agricultor maior controle sobre sua produ\u00e7\u00e3o e presen\u00e7a digital.</p>"},{"location":"AgroMart_Web/planejamento/#como-surgiu","title":"Como Surgiu","text":"<p>O AgroMart Web surgiu como um desdobramento do Hackathon da UnB-FGA (2020), quando a equipe percebeu a necessidade de criar um espa\u00e7o espec\u00edfico para o agricultor gerenciar seus dados.  </p> <p>No prot\u00f3tipo inicial, os produtores s\u00f3 conseguiam divulgar informa\u00e7\u00f5es de forma limitada. A evolu\u00e7\u00e3o do projeto trouxe a ideia de uma plataforma Web robusta, que pudesse:  </p> <ul> <li>Cadastrar lojas e pontos de venda;  </li> <li>Gerenciar produtos (descri\u00e7\u00f5es, pre\u00e7os, imagens e categorias);  </li> <li>Centralizar dados e sincroniz\u00e1-los com o aplicativo Mobile;  </li> <li>Tornar a gest\u00e3o mais pr\u00e1tica mesmo para agricultores com pouca experi\u00eancia tecnol\u00f3gica.  </li> </ul> <p>Assim, o Web passou a ser o cora\u00e7\u00e3o administrativo do AgroMart, conectado diretamente \u00e0 API e refletindo informa\u00e7\u00f5es no Mobile.  </p>"},{"location":"AgroMart_Web/planejamento/#planejamento-de-tarefas-kanban-board","title":"Planejamento de Tarefas \u2014 Kanban Board","text":"<p>O planejamento do AgroMart Web ser\u00e1 conduzido no Kanban Board, garantindo organiza\u00e7\u00e3o e rastreabilidade.  </p> <p>Estrutura do fluxo: - Backlog: ideias, sugest\u00f5es e melhorias futuras; - To Do: tarefas aprovadas e prontas para desenvolvimento; - In Progress: atividades em andamento; - Review: c\u00f3digo conclu\u00eddo e aguardando valida\u00e7\u00e3o; - Done: entregas aprovadas e integradas.  </p> <p>Boa Pr\u00e1tica</p> <p>Nenhuma tarefa pode ser iniciada sem estar previamente registrada e aprovada no Kanban Board. Isso garante clareza, alinhamento e colabora\u00e7\u00e3o efetiva entre os membros da equipe.</p>"},{"location":"AgroMart_Web/planejamento/#requisitos-de-software-e-modelagem","title":"Requisitos de Software e Modelagem","text":"<p>Esta se\u00e7\u00e3o ser\u00e1 utilizada para documentar os requisitos do AgroMart Web (funcionais e n\u00e3o funcionais), al\u00e9m da modelagem de software (diagramas de arquitetura, casos de uso, fluxo de dados e entidades).  </p> <p>\u26a0\ufe0f Este conte\u00fado ser\u00e1 detalhado em etapas futuras do planejamento.</p>"}]}